{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joha\\\\Desktop\\\\dcake1\\\\DreamCakeFront\\\\src\\\\components\\\\Profile\\\\profile.jsx\";\nimport React from \"react\";\nimport { UserData } from './userData';\nimport { Footer, Header } from '../landingPage';\nimport { Options } from \"./options\";\nimport { Information } from \"./information\";\nimport \"./style.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Profile extends React.Component {\n  constructor(props) {\n    super(props);\n    let user = {\n      pasteles: [],\n      email: \"admin2@admin.com\",\n      full_name: \"\",\n      is_active: true,\n      last_login: \"2021-06-24T20:27:53.436704Z\",\n      is_superuser: true,\n      is_staff: true,\n      foto: \"http://localhost:8000/media/users/default.jpg\"\n    };\n    this.state = {\n      user: user,\n      datos: user,\n      current: 0\n    };\n    this.handleButton = this.handleButton.bind(this);\n  }\n\n  componentDidMount() {\n    this.geUser();\n  }\n\n  geUser() {\n    let requestOptions = {\n      method: 'GET',\n      credentials: 'include'\n    };\n    fetch('http://localhost:8000/users/api/auth/user/', requestOptions).then(response => response.json()).then(responseJson => {\n      if (responseJson.hasOwnProperty('email')) {\n        this.setState({\n          user: responseJson,\n          datos: responseJson\n        });\n      } else window.location.pathname = \"/\";\n    }).catch(error => console.log(error));\n  }\n\n  getPasteles() {\n    let requestOptions = {\n      method: 'GET',\n      credentials: 'include'\n    };\n    fetch(`http://localhost:8000/pasteles/`, requestOptions).then(response => response.json()).then(responseJson => {\n      this.setState({\n        datos: responseJson,\n        current: 1\n      });\n    }).catch(error => console.log(error));\n  }\n\n  getPedidos() {\n    let requestOptions = {\n      method: 'GET',\n      credentials: 'include'\n    };\n    fetch(`http://localhost:8000/pedidos/`, requestOptions).then(response => response.json()).then(responseJson => {\n      this.setState({\n        datos: responseJson,\n        current: 2\n      });\n    }).catch(error => console.log(error));\n  }\n\n  handleButton(value) {\n    switch (value) {\n      case 0:\n        this.setState({\n          datos: this.state.user,\n          current: 0\n        });\n        break;\n\n      case 1:\n        this.getPasteles();\n        break;\n\n      case 2:\n        this.getPedidos();\n        break;\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(UserData, {\n        user: this.state.user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"div-bottom\",\n        children: [/*#__PURE__*/_jsxDEV(Options, {\n          handleButton: this.handleButton\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Information, {\n          datos: this.state.datos,\n          current: this.state.current,\n          modificar: this.props.modificar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/joha/Desktop/dcake1/DreamCakeFront/src/components/Profile/profile.jsx"],"names":["React","UserData","Footer","Header","Options","Information","Profile","Component","constructor","props","user","pasteles","email","full_name","is_active","last_login","is_superuser","is_staff","foto","state","datos","current","handleButton","bind","componentDidMount","geUser","requestOptions","method","credentials","fetch","then","response","json","responseJson","hasOwnProperty","setState","window","location","pathname","catch","error","console","log","getPasteles","getPedidos","value","render","modificar"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { UserData } from './userData';\r\nimport { Footer, Header } from '../landingPage';\r\nimport { Options } from \"./options\";\r\nimport { Information } from \"./information\";\r\nimport \"./style.scss\";\r\n\r\nexport class Profile extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        let user = {\r\n            pasteles: [],\r\n            email: \"admin2@admin.com\",\r\n            full_name: \"\",\r\n            is_active: true,\r\n            last_login: \"2021-06-24T20:27:53.436704Z\",\r\n            is_superuser: true,\r\n            is_staff: true,\r\n            foto: \"http://localhost:8000/media/users/default.jpg\"\r\n        }\r\n\r\n        this.state = {\r\n            user: user,\r\n            datos: user,\r\n            current: 0\r\n        }\r\n\r\n        this.handleButton = this.handleButton.bind(this);\r\n    }\r\n    \r\n    componentDidMount() {  \r\n        this.geUser();\r\n    }\r\n    geUser(){\r\n        let requestOptions = {\r\n            method: 'GET',\r\n            credentials: 'include'\r\n        };\r\n        fetch('http://localhost:8000/users/api/auth/user/', requestOptions)\r\n        .then((response) => response.json())\r\n        .then(responseJson => { \r\n            if(responseJson.hasOwnProperty('email')){\r\n                this.setState({\r\n                    user: responseJson,\r\n                    datos: responseJson\r\n                })\r\n            }\r\n            else window.location.pathname = \"/\";\r\n            \r\n        })\r\n        .catch(error => console.log(error));\r\n    }\r\n\r\n    getPasteles(){\r\n        let requestOptions = {\r\n            method: 'GET',\r\n            credentials: 'include'\r\n        };\r\n        fetch(`http://localhost:8000/pasteles/`, requestOptions)\r\n        .then((response) => response.json())\r\n        .then(responseJson => { \r\n            this.setState({\r\n                datos: responseJson,\r\n                current: 1\r\n            })\r\n        })\r\n        .catch(error => console.log(error));\r\n    }\r\n\r\n    getPedidos(){\r\n        let requestOptions = {\r\n            method: 'GET',\r\n            credentials: 'include'\r\n        };\r\n        fetch(`http://localhost:8000/pedidos/`, requestOptions)\r\n        .then((response) => response.json())\r\n        .then(responseJson => { \r\n            this.setState({\r\n                datos: responseJson,\r\n                current: 2\r\n            })\r\n        })\r\n        .catch(error => console.log(error));\r\n    }\r\n\r\n    handleButton(value){\r\n        switch(value){\r\n            case 0: \r\n                this.setState({\r\n                    datos: this.state.user,\r\n                    current: 0\r\n                })\r\n                break;\r\n            case 1:\r\n                this.getPasteles();\r\n                break;\r\n            case 2:\r\n                this.getPedidos();\r\n                break;\r\n        }        \r\n    }\r\n \r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <UserData user = {this.state.user}></UserData>\r\n                <div className =\"div-bottom\">\r\n                    <Options handleButton={this.handleButton}></Options>\r\n                    <Information datos={this.state.datos} current={this.state.current} modificar = {this.props.modificar}></Information>\r\n                </div>\r\n\t\t\t</div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}