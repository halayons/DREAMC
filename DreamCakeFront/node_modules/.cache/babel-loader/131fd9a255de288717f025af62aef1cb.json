{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joha\\\\Desktop\\\\dcake1\\\\DreamCakeFront\\\\src\\\\components\\\\login\\\\login.jsx\";\nimport React from \"react\";\nimport Cookies from 'js-cookie';\nimport Modal from \"react-responsive-modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.renderLogin = async () => {\n      try {\n        let res = await fetch(\"http://localhost:8000/accounts/login/\");\n        let html = await res.text();\n        let parser = new DOMParser();\n        let doc = parser.parseFromString(html, \"text/html\");\n        Cookies.set('csrftoken', doc.getElementsByTagName('input').namedItem('csrfmiddlewaretoken').value);\n        doc.getElementsByTagName('input').namedItem('login').setAttribute('name', 'username');\n        doc.getElementsByTagName('input').namedItem('username').setAttribute('ref', this.input); // doc.getElementsByTagName('form')[0].addEventListener('submit', this.handleSubmit)\n\n        this.setState({\n          test: doc.body.innerHTML\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.login = async event => {\n      event.preventDefault();\n      let user = document.getElementsByTagName('input').namedItem('username').value;\n      let pass = document.getElementsByTagName('input').namedItem('password').value;\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: \"include\",\n        body: JSON.stringify({\n          \"email\": user,\n          \"password\": pass\n        })\n      };\n      let response = await fetch('http://localhost:8000/users/api/auth/login/', requestOptions);\n\n      if (response.statusText === 'OK') {\n        let usr = await fetch('http://localhost:8000/users/api/auth/user/', {\n          credentials: \"include\"\n        });\n        let js = await usr.json();\n        console.log(\"usuario: \" + JSON.stringify(js));\n      } else {\n        let js = await response.json();\n\n        if (response.status === 400) {\n          console.log(\"credenciales incorrectas\");\n        } else if (response.status === 403) {\n          console.log(\"sesion ya iniciada \" + JSON.stringify(js));\n        } else {\n          console.log(\"otro error: \" + JSON.stringify(js) + JSON.stringify(response));\n        }\n      }\n    };\n\n    this.input = /*#__PURE__*/React.createRef();\n    this.state = {\n      test: null\n    };\n  }\n\n  componentDidMount() {\n    this.renderLogin();\n    window.addEventListener('submit', this.login);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content\",\n            dangerouslySetInnerHTML: {\n              __html: this.state.test\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/joha/Desktop/dcake1/DreamCakeFront/src/components/login/login.jsx"],"names":["React","Cookies","Modal","Login","Component","constructor","props","renderLogin","res","fetch","html","text","parser","DOMParser","doc","parseFromString","set","getElementsByTagName","namedItem","value","setAttribute","input","setState","test","body","innerHTML","err","console","log","login","event","preventDefault","user","document","pass","requestOptions","method","headers","credentials","JSON","stringify","response","statusText","usr","js","json","status","createRef","state","componentDidMount","window","addEventListener","render","__html"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Cookies from 'js-cookie';\r\nimport Modal from \"react-responsive-modal\";\r\n\r\nexport class Login extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.input = React.createRef();\r\n        this.state = {\r\n            test : null,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.renderLogin()\r\n        window.addEventListener('submit', this.login)\r\n    }\r\n\r\n\r\n    renderLogin = async () => {\r\n        try {\r\n            let res = await fetch(\"http://localhost:8000/accounts/login/\")\r\n            let html = await res.text();\r\n\r\n            let parser = new DOMParser();\r\n            let doc = parser.parseFromString(html, \"text/html\");\r\n            Cookies.set('csrftoken', doc.getElementsByTagName('input').namedItem('csrfmiddlewaretoken').value)\r\n            doc.getElementsByTagName('input').namedItem('login').setAttribute('name', 'username')\r\n            doc.getElementsByTagName('input').namedItem('username').setAttribute('ref', this.input)\r\n            // doc.getElementsByTagName('form')[0].addEventListener('submit', this.handleSubmit)\r\n\r\n            this.setState({\r\n                test : doc.body.innerHTML,\r\n            });\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    login = async (event) => {\r\n        event.preventDefault();\r\n        let user = document.getElementsByTagName('input').namedItem('username').value\r\n        let pass = document.getElementsByTagName('input').namedItem('password').value\r\n\r\n            const requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json'},\r\n                credentials: \"include\",\r\n                body : JSON.stringify({\"email\" : user, \"password\" : pass})\r\n        };\r\n\r\n        let response = await fetch('http://localhost:8000/users/api/auth/login/', requestOptions)\r\n        if (response.statusText === 'OK'){\r\n            let usr = await fetch('http://localhost:8000/users/api/auth/user/', {credentials: \"include\"})\r\n            let js = await usr.json()\r\n\r\n            console.log(\"usuario: \" + JSON.stringify(js))\r\n        } else{\r\n            let js = await response.json()\r\n            if(response.status === 400){\r\n                console.log(\"credenciales incorrectas\")\r\n            } else if(response.status === 403){\r\n                console.log(\"sesion ya iniciada \" + JSON.stringify(js))\r\n            } else {\r\n                console.log(\"otro error: \"  + JSON.stringify(js) + JSON.stringify(response))\r\n            }\r\n        }    \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <div className=\"login\">\r\n                    <div className=\"container\">\r\n                        <div className=\"content\" dangerouslySetInnerHTML={{ __html: this.state.test }}></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}