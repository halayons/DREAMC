{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joha\\\\Desktop\\\\dcake1\\\\DreamCakeFront\\\\src\\\\components\\\\login\\\\register.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Register extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.renderLogin = async () => {\n      try {\n        let res = await fetch(\"http://localhost:8000/accounts/signup/\");\n        let html = await res.text();\n        let parser = new DOMParser();\n        let doc = parser.parseFromString(html, \"text/html\");\n        this.setState({\n          'test': doc.body.innerHTML\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.register = async event => {\n      event.preventDefault();\n      let email = document.getElementsByTagName('input').namedItem('email').value; // let user = document.getElementsByTagName('input').namedItem('username').value\n\n      let pass1 = document.getElementsByTagName('input').namedItem('password1').value;\n      let pass2 = document.getElementsByTagName('input').namedItem('password2').value;\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: \"include\",\n        body: JSON.stringify({\n          \"email\": email,\n          \"password\": pass1,\n          \"password2\": pass2\n        })\n      };\n      let response = await fetch('http://localhost:8000/users/api/auth/registration/', requestOptions);\n\n      if (response.status === 201) {\n        this.login();\n      } else {\n        let js = await response.json();\n\n        if (response.status === 400) {\n          console.log(js);\n        } else if (response.status === 403) {\n          console.log(\"sesion ya iniciada \" + JSON.stringify(js));\n        } else {\n          console.log(\"otro error: \" + JSON.stringify(js) + JSON.stringify(response));\n        }\n      }\n    };\n\n    this.login = async () => {\n      let user = document.getElementsByTagName('input').namedItem('email').value;\n      let pass = document.getElementsByTagName('input').namedItem('password1').value;\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: \"include\",\n        body: JSON.stringify({\n          \"email\": user,\n          \"password\": pass\n        })\n      };\n      let response = await fetch('http://localhost:8000/users/api/auth/login/', requestOptions);\n\n      if (response.statusText === 'OK') {\n        let usr = await fetch('http://localhost:8000/users/api/auth/user/', {\n          credentials: \"include\"\n        });\n        let js = await usr.json();\n        console.log(\"usuario: \" + JSON.stringify(js));\n      } else {\n        let js = await response.json();\n\n        if (response.status === 400) {\n          console.log(\"credenciales incorrectas\");\n        } else if (response.status === 403) {\n          console.log(\"sesion ya iniciada \" + JSON.stringify(js));\n        } else {\n          console.log(\"otro error: \" + JSON.stringify(js) + JSON.stringify(response));\n        }\n      }\n    };\n\n    this.state = {\n      test: null\n    };\n  }\n\n  componentDidMount() {\n    this.renderLogin();\n    window.addEventListener('submit', this.register);\n    fetch('http://localhost:8000/users/api/auth/user/', {\n      credentials: \"include\"\n    }).then(response => response.json()).then(responseJson => {\n      console.log(responseJson);\n    });\n  }\n\n  render() {\n    console.log(window.location.pathname);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"register\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content\",\n            dangerouslySetInnerHTML: {\n              __html: this.state.test\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/joha/Desktop/dcake1/DreamCakeFront/src/components/login/register.jsx"],"names":["React","Register","Component","constructor","props","renderLogin","res","fetch","html","text","parser","DOMParser","doc","parseFromString","setState","body","innerHTML","err","console","log","register","event","preventDefault","email","document","getElementsByTagName","namedItem","value","pass1","pass2","requestOptions","method","headers","credentials","JSON","stringify","response","status","login","js","json","user","pass","statusText","usr","state","test","componentDidMount","window","addEventListener","then","responseJson","render","location","pathname","__html"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAO,MAAMC,QAAN,SAAuBD,KAAK,CAACE,SAA7B,CAAuC;AAE1CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAiBnBC,WAjBmB,GAiBL,YAAY;AACtB,UAAI;AACA,YAAIC,GAAG,GAAG,MAAMC,KAAK,CAAC,wCAAD,CAArB;AACA,YAAIC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAjB;AAEA,YAAIC,MAAM,GAAG,IAAIC,SAAJ,EAAb;AACA,YAAIC,GAAG,GAAGF,MAAM,CAACG,eAAP,CAAuBL,IAAvB,EAA6B,WAA7B,CAAV;AAEA,aAAKM,QAAL,CAAc;AACV,kBAAQF,GAAG,CAACG,IAAJ,CAASC;AADP,SAAd;AAGH,OAVD,CAUE,OAAOC,GAAP,EAAY;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ,KA/BkB;;AAAA,SAiCnBG,QAjCmB,GAiCR,MAAOC,KAAP,IAAiB;AACxBA,MAAAA,KAAK,CAACC,cAAN;AACA,UAAIC,KAAK,GAAGC,QAAQ,CAACC,oBAAT,CAA8B,OAA9B,EAAuCC,SAAvC,CAAiD,OAAjD,EAA0DC,KAAtE,CAFwB,CAGxB;;AACA,UAAIC,KAAK,GAAGJ,QAAQ,CAACC,oBAAT,CAA8B,OAA9B,EAAuCC,SAAvC,CAAiD,WAAjD,EAA8DC,KAA1E;AACA,UAAIE,KAAK,GAAGL,QAAQ,CAACC,oBAAT,CAA8B,OAA9B,EAAuCC,SAAvC,CAAiD,WAAjD,EAA8DC,KAA1E;AAEA,YAAMG,cAAc,GAAG;AACnBC,QAAAA,MAAM,EAAE,MADW;AAEnBC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SAFU;AAGnBC,QAAAA,WAAW,EAAE,SAHM;AAInBlB,QAAAA,IAAI,EAAEmB,IAAI,CAACC,SAAL,CAAe;AAAE,mBAASZ,KAAX;AAAkB,sBAAYK,KAA9B;AAAqC,uBAAaC;AAAlD,SAAf;AAJa,OAAvB;AAOA,UAAIO,QAAQ,GAAG,MAAM7B,KAAK,CAAC,oDAAD,EAAuDuB,cAAvD,CAA1B;;AACA,UAAIM,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AACzB,aAAKC,KAAL;AACH,OAFD,MAEO;AACH,YAAIC,EAAE,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAAf;;AACA,YAAIJ,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AACzBnB,UAAAA,OAAO,CAACC,GAAR,CAAYoB,EAAZ;AACH,SAFD,MAEO,IAAIH,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAChCnB,UAAAA,OAAO,CAACC,GAAR,CAAY,wBAAwBe,IAAI,CAACC,SAAL,CAAeI,EAAf,CAApC;AACH,SAFM,MAEA;AACHrB,UAAAA,OAAO,CAACC,GAAR,CAAY,iBAAiBe,IAAI,CAACC,SAAL,CAAeI,EAAf,CAAjB,GAAsCL,IAAI,CAACC,SAAL,CAAeC,QAAf,CAAlD;AACH;AACJ;AACJ,KA5DkB;;AAAA,SA8DnBE,KA9DmB,GA8DX,YAAY;AAChB,UAAIG,IAAI,GAAGjB,QAAQ,CAACC,oBAAT,CAA8B,OAA9B,EAAuCC,SAAvC,CAAiD,OAAjD,EAA0DC,KAArE;AACA,UAAIe,IAAI,GAAGlB,QAAQ,CAACC,oBAAT,CAA8B,OAA9B,EAAuCC,SAAvC,CAAiD,WAAjD,EAA8DC,KAAzE;AAEA,YAAMG,cAAc,GAAG;AACnBC,QAAAA,MAAM,EAAE,MADW;AAEnBC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SAFU;AAGnBC,QAAAA,WAAW,EAAE,SAHM;AAInBlB,QAAAA,IAAI,EAAGmB,IAAI,CAACC,SAAL,CAAe;AAAC,mBAAUM,IAAX;AAAiB,sBAAaC;AAA9B,SAAf;AAJY,OAAvB;AAOA,UAAIN,QAAQ,GAAG,MAAM7B,KAAK,CAAC,6CAAD,EAAgDuB,cAAhD,CAA1B;;AACA,UAAIM,QAAQ,CAACO,UAAT,KAAwB,IAA5B,EAAiC;AAC7B,YAAIC,GAAG,GAAG,MAAMrC,KAAK,CAAC,4CAAD,EAA+C;AAAC0B,UAAAA,WAAW,EAAE;AAAd,SAA/C,CAArB;AACA,YAAIM,EAAE,GAAG,MAAMK,GAAG,CAACJ,IAAJ,EAAf;AAEAtB,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAce,IAAI,CAACC,SAAL,CAAeI,EAAf,CAA1B;AACH,OALD,MAKM;AACF,YAAIA,EAAE,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAAf;;AACA,YAAGJ,QAAQ,CAACC,MAAT,KAAoB,GAAvB,EAA2B;AACvBnB,UAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACH,SAFD,MAEO,IAAGiB,QAAQ,CAACC,MAAT,KAAoB,GAAvB,EAA2B;AAC9BnB,UAAAA,OAAO,CAACC,GAAR,CAAY,wBAAwBe,IAAI,CAACC,SAAL,CAAeI,EAAf,CAApC;AACH,SAFM,MAEA;AACHrB,UAAAA,OAAO,CAACC,GAAR,CAAY,iBAAkBe,IAAI,CAACC,SAAL,CAAeI,EAAf,CAAlB,GAAuCL,IAAI,CAACC,SAAL,CAAeC,QAAf,CAAnD;AACH;AACJ;AACJ,KAzFkB;;AAGf,SAAKS,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE;AADG,KAAb;AAGH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAK1C,WAAL;AACA2C,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,KAAK7B,QAAvC;AACAb,IAAAA,KAAK,CAAC,4CAAD,EAA+C;AAAE0B,MAAAA,WAAW,EAAE;AAAf,KAA/C,CAAL,CACKiB,IADL,CACWd,QAAD,IAAcA,QAAQ,CAACI,IAAT,EADxB,EAEKU,IAFL,CAEUC,YAAY,IAAI;AAAEjC,MAAAA,OAAO,CAACC,GAAR,CAAYgC,YAAZ;AAA2B,KAFvD;AAGH;;AA8EDC,EAAAA,MAAM,GAAG;AACLlC,IAAAA,OAAO,CAACC,GAAR,CAAY6B,MAAM,CAACK,QAAP,CAAgBC,QAA5B;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC,SAAf;AAAyB,YAAA,uBAAuB,EAAE;AAAEC,cAAAA,MAAM,EAAE,KAAKV,KAAL,CAAWC;AAArB;AAAlD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH;;AA1GyC","sourcesContent":["import React from \"react\";\r\n\r\nexport class Register extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            test: null,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.renderLogin()\r\n        window.addEventListener('submit', this.register)\r\n        fetch('http://localhost:8000/users/api/auth/user/', { credentials: \"include\" })\r\n            .then((response) => response.json())\r\n            .then(responseJson => { console.log(responseJson) })\r\n    }\r\n\r\n\r\n    renderLogin = async () => {\r\n        try {\r\n            let res = await fetch(\"http://localhost:8000/accounts/signup/\")\r\n            let html = await res.text();\r\n\r\n            let parser = new DOMParser();\r\n            let doc = parser.parseFromString(html, \"text/html\");\r\n\r\n            this.setState({\r\n                'test': doc.body.innerHTML\r\n            });\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    register = async (event) => {\r\n        event.preventDefault();\r\n        let email = document.getElementsByTagName('input').namedItem('email').value\r\n        // let user = document.getElementsByTagName('input').namedItem('username').value\r\n        let pass1 = document.getElementsByTagName('input').namedItem('password1').value\r\n        let pass2 = document.getElementsByTagName('input').namedItem('password2').value\r\n\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            credentials: \"include\",\r\n            body: JSON.stringify({ \"email\": email, \"password\": pass1, \"password2\": pass2 })\r\n        };\r\n\r\n        let response = await fetch('http://localhost:8000/users/api/auth/registration/', requestOptions)\r\n        if (response.status === 201) {\r\n            this.login();\r\n        } else {\r\n            let js = await response.json()\r\n            if (response.status === 400) {\r\n                console.log(js)\r\n            } else if (response.status === 403) {\r\n                console.log(\"sesion ya iniciada \" + JSON.stringify(js))\r\n            } else {\r\n                console.log(\"otro error: \" + JSON.stringify(js) + JSON.stringify(response))\r\n            }\r\n        }\r\n    }\r\n\r\n    login = async () => {\r\n        let user = document.getElementsByTagName('input').namedItem('email').value\r\n        let pass = document.getElementsByTagName('input').namedItem('password1').value\r\n\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json'},\r\n            credentials: \"include\",\r\n            body : JSON.stringify({\"email\" : user, \"password\" : pass})\r\n       };\r\n\r\n        let response = await fetch('http://localhost:8000/users/api/auth/login/', requestOptions)\r\n        if (response.statusText === 'OK'){\r\n            let usr = await fetch('http://localhost:8000/users/api/auth/user/', {credentials: \"include\"})\r\n            let js = await usr.json()\r\n\r\n            console.log(\"usuario: \" + JSON.stringify(js))\r\n        } else{\r\n            let js = await response.json()\r\n            if(response.status === 400){\r\n                console.log(\"credenciales incorrectas\")\r\n            } else if(response.status === 403){\r\n                console.log(\"sesion ya iniciada \" + JSON.stringify(js))\r\n            } else {\r\n                console.log(\"otro error: \"  + JSON.stringify(js) + JSON.stringify(response))\r\n            }\r\n        }    \r\n    }\r\n\r\n\r\n    render() {\r\n        console.log(window.location.pathname)\r\n        return (\r\n            <div className=\"App\">\r\n                <div className=\"register\">\r\n                    <div className=\"container\">\r\n                        <div className=\"content\" dangerouslySetInnerHTML={{ __html: this.state.test }}></div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}